<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.mapper.BoardMapper">
    <select id="selectByPage" parameterType="map" resultType="Board">
        SELECT *
        FROM (
        SELECT rownum r, a.*
        FROM (SELECT level,
        board_no, board_parent_no, board_title, board_content, board_id,
        board_viewcount, board_dt
        FROM board
        START WITH board_parent_no = 0
        CONNECT BY PRIOR board_no = board_parent_no
        ORDER SIBLINGS BY board_no DESC
        ) a
        )
        WHERE r BETWEEN #{startRow} AND #{endRow}
    </select>
    <select id="selectCount" resultType="int">
        SELECT COUNT(*) FROM board
    </select>
    <select id="selectCount2" resultType="int"
        parameterType="string">
        SELECT COUNT(*) FROM board WHERE board_title LIKE '%${value}%' OR board_id
        LIKE '%${value}%'
    </select>
    <select id="selectByWord" resultType="Board" parameterType="map"> <!-- parameter 여러개 전달 될 것이기 때문에 map타입 -->
        SELECT *
        FROM (
        SELECT rownum r, a.*
        FROM (SELECT level,
        board_no, board_parent_no, board_title, board_content, board_id,
        board_dt, board_viewcount
        FROM board
        WHERE board_title LIKE '%${word}%' OR board_id LIKE '%${word}%'
        START WITH board_parent_no = 0
        CONNECT BY PRIOR board_no = board_parent_no
        ORDER SIBLINGS BY board_no DESC
        ) a
        )
        WHERE r BETWEEN #{startRow} AND #{endRow}
        <!-- #은 ?를 대신할 값이고 $는 값을 대신하는 것 -->
    </select>
    <select id="selectByBoardNo" resultType="Board" parameterType="int"> <!-- board내용 전부 가져와야하기 때문에 Board 타입 -->
        SELECT *
        FROM board
        WHERE board_no = #{boardNo}
    </select>
    <update id="update" parameterType="Board">
    UPDATE board
    <set>
    <choose>
    <when test="boardContent != null">
    board_content = #{boardContent}
    </when>
    <when test="boardViewcount == -1">
    board_viewcount = board_viewcount+1
    </when>
    </choose>
    </set>
    WHERE board_no=#{boardNo}
    </update>
    <!-- SET board_content = #{boardContent}, board_title=#{boardTitle} -->
    <!-- **<choose>** Java의 switch() **<when>** java의 case **<otherwise>** java 
        의 default -->
<!-- SET board_content = #{boardContent}, board_title = #{boardTitle} -->
    <delete id="deleteReply" parameterType="int">
    DELETE FROM board
    WHERE board_no IN ( SELECT  board_no
                                  FROM board
                                  START WITH board_parent_no = #{boardNo}
                                  CONNECT BY PRIOR board_no = board_parent_no)
    </delete>
    
    <delete id="deleteBoard" parameterType="int">
    DELETE FROM board
    WHERE board_no = #{boardNo}
    </delete>
    <!-- 답글 삭제와 게시글 삭제는 같은 트랜젝션 안에서 이루어져야 함 -->
    <!-- 하나가 문제가 생기면 나머지 하나도 롤백 되어야함 -->
    
    <insert id="insert" parameterType="Board">
        <selectKey
        keyProperty="boardNo" 
        resultType="int"
        order="AFTER" 
        statementType="PREPARED">
        SELECT board_seq.CURRVAL FROM dual
        <!-- keyProperty -> parameter로 전달된 Board 객체의 멤버변수 boardNo -->    
        <!-- order="AFTER" : 추가 후 -->
        </selectKey>  
    INSERT INTO board(board_no, board_parent_no, board_title, board_content, board_id, board_viewcount)
    VALUES (board_seq.NEXTVAL, #{boardParentNo}, #{boardTitle}, #{boardContent}, #{boardId}, 0) 
    </insert>
</mapper>